swagger: '2.0'
schemes:
  - http
  - https
host: api.liveen.io
basePath: /v1
info:
  description: |
    이 명세서는 리빈 프로젝트의 API 설계 명세서입니다. (작성자: 이도현)
  version: 0.0.3-beta
  title: Liveen Project (for beta)
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: cailhuiris@finotek.co.kr
  x-logo:
    url: 'liveen_logo.png'
tags:
  - name: user
    description: 사용자 기능
  - name: location
    description: 위치 저장 기능
  - name: wallet
    description: 지갑 기능
x-tagGroups:
  - name: Fundamental Logic
    tags:
      - user
      - location
      - wallet
x-servers:
  - url: //api.liveen.io/v1
    description: Production Server
  - url: //test.liveen.io/v1
    description: Test Server
paths:
  # 베타 인증
  /user/verify/beta:
    post:
      tags:
        - user
      summary: 베타 테스터 인증
      description: 사용자가 지급 받은 QR코드로 베타 테스터를 인증하는 프로세스
      operationId: verifyBetaTest
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Beta Test Verification
          required: true
          schema:
            $ref: '#/definitions/VerifyBetaTester'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '409':
          description: 이미 인증된 QR코드일 때 발생하는 에러
  # 프로모션
  /user/verify/promotion:
    post:
      tags:
        - user
      summary: 베타 테스트 프로모션 코드 등록
      description: 관리자에 의해 기간별 프로모션 코드를 검증
      operationId: verifyPromotion
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Promotion Verification
          required: true
          schema:
            $ref: '#/definitions/VerifyPromotion'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
  # 사용자 가입
  /user:
    post:
      tags:
        - user
      summary: 사용자 가입
      description: 사용자 가입 이 후, 유효한 이메일 계정인지 확인하기 위해 해당 이메일로 승인 URL을 전송합니다.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Create user object
          required: true
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '409':
          description: 중복된 이메일로 가입을 요청했을 때 발생합니다.
    # 사용자 정보 조회
    get:
      tags:
        - user
      summary: 사용자 정보 조회
      operationId: getUser
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 세션 토큰
          required: true
          type: string
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/User'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 사용자 정보 수정
    put:
      tags:
        - user
      summary: 사용자 정보 수정
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 세션 토쿤
          required: true
          type: string
        - in: body
          name: body
          description: Upload profile image.
          required: true
          schema:
            $ref: '#/definitions/UpdateUser'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 이메일 인증
  /user/validate:
    post:
      tags:
        - user
      summary: 이메일 인증
      description: 회원가입 이후 이메일로 전송된 인증번호를 입력해야 회원가입이 완료된다.
      operationId: validateEmail
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Validate E-Mail
          required: true
          schema:
            $ref: '#/definitions/ValidateEmail'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
  # 지갑 등록
  /user/add/wallet:
    post:
      tags:
        - user
      summary: 지갑 주소 등록하기
      operationId: registerWalletAddress
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 기기로 푸시하기 위한 앱 키 등록
          required: true
          schema:
            $ref: '#/definitions/ApplyWallet'
      responses:
        default:
          description: Successful Operation
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 프로필 사진 업로드
  /user/profile:
    post:
      tags:
        - user
      summary: 프로필 사진 업로드
      operationId: uploadProfileImage
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: body
          name: body
          description: Upload profile image.
          required: true
          schema:
            $ref: '#/definitions/UserProfileUpload'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 업로드에 실패했을 때 발생합니다.
  # 로그인
  /user/login:
    post:
      tags:
        - user
      summary: 로그인
      operationId: login
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 기기로 푸시하기 위한 앱 키 등록
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/LoginResult'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: 아이디와 비밀번호가 일치하지 않을 때 발생한다.
        '423':
          description: 회원정보는 존재하나 이메일 인증은 거치지 않은경우에 인증번호를 요청할 수 있는 임시 토큰이 발급된다.
          schema:
            $ref: '#/definitions/TempToken'
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 인증메일 요청
  /user/request_auth_code:
    post:
      tags:
        - user
      summary: 인증 메일 재전송
      operationId: requestAuthCode
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 인증 코드를 재전송하기 위한 3분짜리 토큰 전송
          required: true
          schema:
            $ref: '#/definitions/RequestAuthCode'
      responses:
        default:
          description: Successful Operation
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: 일치하는 토큰이 존재하지 않을 때 발생한다.
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 비밀번호 변경
  /user/change_password:
    put:
      tags:
        - user
      summary: 비밀번호 변경
      operationId: login
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 예전 비밀번호와 현재 비밀번호
          required: true
          schema:
            $ref: '#/definitions/ChangePassword'
      responses:
        default:
          description: Successful Operation
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: 기존 비밀번호가 일치하지 않은 경우 발생한다.
        '500':
          description: 얘기치 못한 서버 에러 시 발생

  # 지갑 입출금 내역 조회
  /wallet/transactions:
    get:
      tags:
        - wallet
      summary: 송금내역조회
      operationId: fetchTransactions
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 서버 에러
  # 위치 정보 업로드
  /location:
    post:
      tags:
        - location
      summary: 위치 정보 업로드
      operationId: uploadLocation
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 위치 정보.
          required: true
          schema:
            $ref: '#/definitions/UploadLocation'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 업로드에 실패했을 때 발생합니다.
  /location/nearby:
    get:
      tags:
        - location
      summary: 현재 위치 주변검색
      operationId: searchNearby
      description: 현재 주어진 위도 경도 주변에서 내 동선정보를 가져온다.
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: query
          name: lat
          description: 위도
          type: string
          required: true
        - in: query
          name: lng
          description: 경도
          type: string
          required: true
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Location'
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: 업로드에 실패했을 때 발생합니다.
  /location/behavior:
    put:
      tags:
        - location
      summary: 기존 위치에 행동 기록하기
      operationId: searchNearby
      description: 10분마다 수집한 위치에다가 특정 행동을 기록한다. (의료, 쇼핑, 식사 등등)
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: 사용자 접근 토큰
          required: true
          type: string
        - in: body
          name: body
          description: Beta Test Verification
          required: true
          schema:
            $ref: '#/definitions/AddBehaviorToLocation'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: API키 혹은 토큰이 유효하지 않을 때 발생한다.
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: 일치하는 locationId가 내것이 아니거나 존재하지 않을 때
        '500':
          description: 업로드에 실패했을 때 발생합니다.
definitions:
  ErrorField:
    type: object
    properties:
      userId:
        description: '키에는 에러가 발생한 소스 값이 들어가고 내용에는 에러 메시지를 보여줍니다.'
        type: string
        example: '아이디 입력값은 반드시 입력해야 합니다.'
  FormError:
    type: object
    properties:
      status:
        description: 상태 코드
        type: integer
        example: 400
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorField'
  Id:
    type: integer
    format: int64
  ApplyWallet:
    type: object
    properties:
      walletAddress:
        descripion: 지갑 주소 값
        type: string
        minLength: 1
      publicKey:
        description: 지갑의 공개키
        type: string
        minLength: 5
  VerifyBetaTester:
    type: object
    properties:
      ticket:
        description: QR코드 프라이빗키를 해싱한 값
        type: string
        minLength: 1
  VerifyPromotion:
    type: object
    properties:
      promotionCode:
        description: 프로모션 코드
        type: string
        minLength: 1
        emample: a123456789
  ValidateEmail:
    type: object
    properties:
      authCode:
        description: 이메일로 전송된 인증번호
        type: string
        minLength: 1
      appKey:
        descripion: 푸시 전송을 위한 기기 APP KEY 값을 등록한다.
        type: string
        minLength: 1
  CreateUser:
    type: object
    properties:
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      email:
        description: 이메일 주소, 실질적으로 아이디로 사용한다.
        type: string
        minLength: 1
        example: cailhuiris@finotek.co.kr
      password:
        description: '사용자 비밀번호'
        type: string
        format: password
        minLength: 7
        example: fino1838tek!!@#
      promotionCode:
        description: 프로모션 코드
        type: string
        minLength: 4
        example: a123456789
  UpdateUser:
    type: object
    properties:
      userId:
        description: 사용자 아이디
        type: integer
        minLength: 1
        example: 1
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      introduction:
        description: 사용자 소개글
        type: string
      birth:
        description: 생년/월일
        type: string
        example: 1993/12/03
      gender:
        description: 성별
        type: string
        example: m/f
      nationality:
        description: 국적 입력
        type: string
        example: ko-KR
  UserProfileUpload:
    type: object
    properties:
      userId:
        descrition: 업로드하려는 사용자의 아이디
        type: integer
        example: 1
      imageUrl:
        description: 업로드 된 프로필 사진 URL, 해당 필드가 주어지지 않은 경우엔 default 사진을 보여준다.
        type: string
        example: https://s3-aws.amazon.com/reahrkahr/weqhehuih/profile.png
  User:
    type: object
    properties:
      userId:
        description: 사용자의 index
        type: integer
        example: 1
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      email:
        description: 이메일 주소, 실질적으로 아이디로 사용한다.
        type: string
        minLength: 1
        example: cailhuiris@finotek.co.kr
      profileImage:
        description: 프로필 사진 URL
        type: string
        example: https://s3-aws.amazon.com/reahrkahr/weqhehuih/profile.png
      walletAddress:
        description: 사용자의 지갑 주소
        type: string
        minLength: 1
        example: 0x93BC4bec6D678e8e74bB9EC3e1Be5EDfA608e2B6a123n
      introduction:
        description: 사용자 소개글
        type: string
      birth:
        description: 생년/월일
        type: string
        example: 1993/12/03
      gender:
        description: 성별
        type: string
        example: m/f
      promotionCode:
        description: 프로모션 코드
        type: string
        example: a123456789
      isActive:
        description: 이메일 인증 여부
        type: string
        example : 1
  Login:
    type: object
    properties:
      email:
        description: 사용자 이메일
        type: string
        example: cailhuiris@finotek.co.kr
      password:
        description: 비밀번호
        type: string
        example: 128h83hFinotekn12bu!!
  LoginResult:
    type: object
    properties:
      accessToken:
        description: 사용자 권한 접근 토큰
        type: string
        example: ASdni1erahrkhudbqASdjiejirjaks89doihweo
      expiredAt:
        description: 토큰 만료 일자
        type: date-time
        minLength: 1
  TempToken:
    type: object
    properties:
      tempToken:
        description: 인증 메일 요청을 하기 위한 임시 토큰
        type: string
        minLength: 1
      expiredAt:
        description: 토큰 만료 일자
        type: date-time
        minLength: 1
  RequestAuthCode:
    type: object
    properties:
      tempToken:
        description: 인증 메일 요청을 위한 임시 토큰
        type: string
        minLength: 1
  AuthCode:
    type: object
    properties:
      authCode:
        description: 인증번호
        type: string
        minLength: 1
  ChangePassword:
    type: object
    properties:
      oldPassword:
        description: 기존 비밀번호
        type: string
      newPassword:
        description: 새 비밀번호
        type: string
  FindPassword:
    type: object
    properties:
      email:
        description: 비밀번호를 찾을 이메일 주소 값 입력
        type: string
  UploadLocation:
    type: object
    properties:
      userId:
        description: 사용자 아이디
        type: integer
      latitude:
        description: 위도
        type: float
        minLength: 1
        example: 37.5662952
      longitude:
        description: 경도
        type: float
        minLength: 1
        example: 126.97794509999994
      IsCheckIn:
        description: 체크인인지 / 자동인지 여부
        type: integer
        minLength: 1
        example: 'C/A (Check-in/Automatic)'
      behavior:
        description: 행동을 나타내는 4자리 코드 (운동, 쇼핑, 식사 등)
        type: string
        minLength: 1
        example: FITN // (운동), SHOP // (쇼핑)
      timestamp:
        description:  현재 시간(UTC)
        type: integer
        minLength: 1
      locationString:
        description: userId, latitude, longitude, timestamp의 json string
        minLength: 1
      locationSignature:
        description: locatoinString의 서명
        type: string
        minLength: 1
      behaviorString:
        description: userId, behavior, timestamp의 json string
        type: string
      behaviorSignature:
        description: behaviorString의 서명
        type: string
      publicKey:
        description: 공개 키
        type: string
        minLength: 1
  Location:
    type: array
    items:
      type: object
      properties:
        locationId:
          description: 위치 ID
          type: integer
        userId:
          description: 사용자 아이디
          type: integer
        latitude:
          description: 위도
          type: float
          minLength: 1
          example: 37.5662952
        longitude:
          description: 경도
          type: float
          minLength: 1
          example: 126.97794509999994
        isCheckIn:
          description: 체크인인지 아닌지 여부 (내가 의도적으로 위치를 지정했는지 아닌지 차이)
          type: boolean
          example: true
        behavior:
          description: 행동을 나타내는 4자리 코드 (운동, 쇼핑, 식사 등)
          type: string
          minLength: 1
          example: FITN // (운동), SHOP // (쇼핑)
        createdAt:
          description: 위치등록일
          type: date-time
  AddBehaviorToLocation:
    type: object
    properties:
      contentId:
        description: 컨텐츠 ID
        type: integer
        example: 1
      behavior:
        description: 행동을 나타내는 4자리 코드 (운동, 쇼핑, 식사 등)
        type: string
        minLength: 1
        example: FITN // (운동), SHOP // (쇼핑)
      behaviorString:
        description: userId, behavior, timestamp의 json string
        type: string
        minLength: 1
      timestamp:
        description:  현재 시간(UTC)
        type: integer
        minLength: 1
      signature:
        description: behaviorString의 서명
        type: string
        minLength: 1
      publicKey:
        description: 공개 키
        type: string
        minLength: 1
  Transactions:
    type: array
    items:
      type: object
      properties:
        type:
          description: 송금인지, 입금인지 나타낸다. ('s', 'r') 로 구분한다.
          type: string
          minLength: 1
          example: s
        amount:
          description: VEEN 의 양
          type: integer
          minLength: 1
          example: 10000
        from:
          description: 보낸이 주소
          type: string
          minLength: 1
          example: 0xeirne38y37h47h454j54h84h
        to:
          description: 받은이 주소 (나한테 입근된거라면 to의 주소는 내 주소가 된다.)
          type: string
          minLength: 1
          example: 0xeirne38y37h47h454j54h84h
        sender:
          description: 보낸 이 이름
          type: string
          minLength: 1
        receiver:
          description: 받은 이 이름
          type: string
          minLength: 1
        date:
          description: 거래가 이루어진 날짜
          minLength: 1
          type: date-time
        succeeded:
          description: 성공 여부 (0 이면 실패, 1 이면 성공한 거래, -1이면 pending중인 거래)
          type: integer
          minLength: 1
          example: 1
  SendTransaction:
    type: object
    properties:
      toAddress:
        description: 받는 이 주소
        type: string
        minLength: 1
      amount:
        description: Veen 금액
        type: integer
        minLength: 1
      publicKey:
        description: 트랜잭션 서명 공개 키
        type: string
        minLength: 1
      signature:
        description: 트랜잭션 서명
        type: string
        minLength: 1
  Unauthorized:
    type: object
    properties:
      source:
        description: 에러가 발생한 지점
        type: string
        minLength: 1
        example: api_key
      result:
        description: 결과 메시지
        type: string
        minLength: 1
        example: Invalid api key.
