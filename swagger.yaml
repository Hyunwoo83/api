swagger: '2.0'
schemes:
  - http
  - https
host: api.liveen.io
basePath: /v1
info:
  description: |
    이 명세서는 리빈 프로젝트의 API 설계 명세서입니다. (작성자: 이도현)
  version: 0.0.3-beta
  title: Liveen Project (for beta)
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: cailhuiris@finotek.co.kr
  x-logo:
    url: 'liveen_logo.png'
tags:
  - name: user
    description: 사용자 기능
  - name: location
    description: 위치 저장 기능
  - name: wallet
    description: 지갑 기능
x-tagGroups:
  - name: Fundamental Logic
    tags:
      - user
      - location
      - wallet
x-servers:
  - url: //api.liveen.io/v1
    description: Production Server
  - url: //test.liveen.io/v1
    description: Test Server
paths:
  # 사용자 가입
  /user:
    post:
      tags:
        - user
      summary: 사용자 가입
      description: 사용자 가입 이 후, 유효한 이메일 계정인지 확인하기 위해 해당 이메일로 승인 URL을 전송합니다.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Create user object
          required: true
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '409':
          description: 중복된 이메일로 가입을 요청했을 때 발생합니다.
  '/user/{id}':
  # 사용자 정보 조회
    get:
      tags:
        - user
      summary: 사용자 정보 조회
      operationId: getUser
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토쿤
          required: true
          type: string
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/User'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 사용자 정보 수정
    put:
      tags:
        - user
      summary: 사용자 정보 수정
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토쿤
          required: true
          type: string
        - in: body
          name: body
          description: Upload profile image.
          required: true
          schema:
            $ref: '#/definitions/UpdateUser'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 프로필 사진 업로드
  /user/profile:
    post:
      tags:
        - user
      summary: 프로필 사진 추가
      operationId: uploadProfileImage
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토큰
          required: true
          type: string
        - in: body
          name: body
          description: Upload profile image.
          required: true
          schema:
            $ref: '#/definitions/UserProfileUpload'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500': 
          description: 업로드에 실패했을 때 발생합니다.
  # 앱 키 등록
  /user/appkey:
    put:
      tags:
        - user
      summary: app key 값 등록하기
      operationId: registerAppKey
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 기기로 푸시하기 위한 앱 키 등록
          required: true
          schema:
            $ref: '#/definitions/AppKey'
      responses:
        default:
          description: Successful Operation
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  /wallet/send:
    post:
      tags:
        - wallet
      summary: Veen 송금하기
      operationId: sendTransaction
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 송금 주소, 금액 등
          required: true
          schema:
            $ref: '#/definitions/SendTransaction'
      responses:
        default:
          description: Successful Operation
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500':
          description: 얘기치 못한 서버 에러 시 발생
  # 지갑 입출금 내역 조회
  /wallet/transactions:
    get:
      tags:
        - wallet
      summary: 송금내역조회
      operationId: fetchTransactions
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토큰
          required: true
          type: string
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500': 
          description: 서버 에러
  # 지갑 주소 검색
  /wallet/search?keyword=:
    get:
      tags:
        - wallet
      summary: 지갑주소 검색
      operationId: searchWalletAddress
      produces:
        - application/json
      parameters:
        - in: query
          name: keyword
          description: 검색 키워드
          required: true
          type: string
        - in: header
          name: filter-by
          description: 검색 조건 지정하기
          required: true
          type: string
      responses:
        default:
          description: Successful Operation
          schema:
            $ref: '#/definitions/WalletAddressSearchResult'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500': 
          description: 서버 에러
  # 위치 정보 업로드
  /location:
    post:
      tags:
        - location
      summary: 위치 정보 업로드
      operationId: uploadLocation
      produces:
        - application/json
      parameters:
        - in: header
          name: session-id
          description: 사용자 세션 토큰
          required: true
          type: string
        - in: body
          name: body
          description: 위치 정보.
          required: true
          schema:
            $ref: '#/definitions/Location'
      responses:
        default:
          description: Successful Operation
        '400':
          description: 입력값의 형식이 틀렸을 때 발생
          schema:
            $ref: '#/definitions/FormError'
        '401':
          description: 세션 토큰이 유효하지 않을 빼 발생
        '500': 
          description: 업로드에 실패했을 때 발생합니다.
definitions:
  ErrorField:
    type: object
    properties:
      source:
        description: '에러가 발생한 소스'
        type: string
        example: 'userId'
      message:
        description: '에러 메시지'
        type: string
        example: '아이디 입력값은 반드시 입력해야 합니다.'
  FormError:
    type: object
    properties:
      status:
        description: 상태 코드
        type: integer
        example: 400
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorField'
  Id:
    type: integer
    format: int64
  AppKey:
    type: object
    properties:
      appKey:
        descripion: App Key 값
        type: string
        minLength: 1
  CreateUser:
    type: object
    properties:
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      email:
        description: 이메일 주소, 실질적으로 아이디로 사용한다.
        type: string
        minLength: 1
        example: cailhuiris@finotek.co.kr
      password:
        description: '사용자 비밀번호 8자리 이상 16자리 이하의 영문 대소문자, 숫자, 특수문자 조합으로서 적어도 하나의 특수문자는 포함해야한다.'
        type: string
        format: password
        minLength: 8
        pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$'
        example: drowssaP123!
      walletAddress:
        description: 사용자의 지갑 주소
        type: string
        minLength: 1
        example: 0x93BC4bec6D678e8e74bB9EC3e1Be5EDfA608e2B6a123n
      publicKey:
        description: 사용자의 공개 키
        type: string
        minLength: 1
        example: 0x93BC4bec6D678e8e74bB9EC3e1Be5EDfA608123h81h38
  UpdateUser:
    type: object
    properties:
      userId:
        description: 사용자 아이디
        type: integer
        minLength: 1
        example: 1
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      introduction:
        description: 사용자 소개글
        type: string
      birth:
        description: 생년/월일
        type: string
        example: 1993/12/03
      gender:
        description: 성별
        type: string
        example: m/f
  UserProfileUpload:
    type: object
    properties:
      userId:
        descrition: 업로드하려는 사용자의 아이디
        type: integer
        example: 1
      imageUrl:
        description: 업로드 된 프로필 사진 URL, 해당 필드가 주어지지 않은 경우엔 default 사진을 보여준다.
        type: string
        example: https://s3-aws.amazon.com/reahrkahr/weqhehuih/profile.png
  User:
    type: object
    properties:
      userId:
        description: 사용자의 index
        type: integer
        example: 1
      name:
        description: 사용자 이름
        type: string
        minLength: 4
        example: David Lee
      email:
        description: 이메일 주소, 실질적으로 아이디로 사용한다.
        type: string
        minLength: 1
        example: cailhuiris@finotek.co.kr
      profileImage:
        description: 프로필 사진 URL
        type: string
        example: https://s3-aws.amazon.com/reahrkahr/weqhehuih/profile.png
      address:
        description: 사용자의 지갑 주소
        type: string
        minLength: 1
        example: 0x93BC4bec6D678e8e74bB9EC3e1Be5EDfA608e2B6a123n
  Location:
    type: object
    properties:
      userId:
        description: 사용자 아이디
        type: integer
      latitude:
        description: 위도
        type: float
        minLength: 1
        example: 37.5662952
      longitude:
        description: 경도
        type: float
        minLength: 1
        example: 126.97794509999994
      publicKey:
        description: 공개 키
        type: string
        minLength: 1
      timestamp:
        description: 트랜잭션 시간
        type: date-time
        minLength: 1
      signature:
        description: 트랜잭션 서명
        type: string
        minLength: 1
  Transactions:
    type: array
    items:
      type: object
      properties:
        type:
          description: 송금인지, 입금인지 나타낸다. ('s', 'r') 로 구분한다.
          type: string
          minLength: 1
          example: s
        amount:
          description: VEEN 의 양
          type: integer
          minLength: 1
          example: 10000
        from:
          description: 보낸이 주소
          type: string
          minLength: 1
          example: 0xeirne38y37h47h454j54h84h
        to:
          description: 받은이 주소 (나한테 입근된거라면 to의 주소는 내 주소가 된다.)
          type: string
          minLength: 1
          example: 0xeirne38y37h47h454j54h84h
        sender:
          description: 보낸 이 이름
          type: string
          minLength: 1
        receiver:
          description: 받은 이 이름
          type: string
          minLength: 1
        date:
          description: 거래가 이루어진 날짜
          minLength: 1
          type: date-time
        succeeded:
          description: 성공 여부 (0 이면 실패, 1 이면 성공한 거래, -1이면 pending중인 거래)
          type: integer
          minLength: 1
          example: 1
  SendTransaction:
    type: object
    properties:
      toAddress:
        description: 받는 이 주소
        type: string
        minLength: 1
      amount:
        description: Veen 금액
        type: integer
        minLength: 1
      publicKey:
        description: 트랜잭션 서명 공개 키
        type: string
        minLength: 1
      signature:
        description: 트랜잭션 서명
        type: string
        minLength: 1
  WalletAddressSearchResult:
    type: object
    properties:
      email:
        description: 받는이 이메일 주소
        type: string
        minLength: 1
      name:
        description: 받는이 이름
        type: string
        minLength: 1
      profile:
        description: 받는이 프로필 사진
        type: string
        minLength: 1
      walletAddress:
        description: 받는이 지갑 주소
        type: string
        minLength: 1